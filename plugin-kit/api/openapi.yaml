openapi: 3.0.3
info:
  title: CircuitExp1 AI LLM Plugin Kit API
  description: External REST API for integrating AI LLM capabilities into third-party applications
  version: 1.0.0
  contact:
    name: CircuitExp1 Team
    email: support@circuitexp1.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://api.circuitexp1.com/v1
    description: Production server

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the plugin service
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /config:
    get:
      summary: Get plugin configuration
      description: Returns the current plugin configuration (safe values only)
      tags:
        - Configuration
      responses:
        '200':
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'

  /completion:
    post:
      summary: Generate code completion
      description: Generate code completions using AI LLM providers
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
      responses:
        '200':
          description: Completion generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /completion/stream:
    post:
      summary: Generate streaming code completion
      description: Generate code completions with streaming response
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
      responses:
        '200':
          description: Streaming completion response
          content:
            text/plain:
              schema:
                type: string

  /review:
    post:
      summary: Review code
      description: Analyze and review code for quality, security, and best practices
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
      responses:
        '200':
          description: Code review completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'

  /analysis:
    post:
      summary: Analyze code
      description: Perform various types of code analysis (performance, security, complexity)
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
      responses:
        '200':
          description: Analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'

  /bugs:
    post:
      summary: Detect bugs
      description: Analyze code for potential bugs and vulnerabilities
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugDetectionRequest'
      responses:
        '200':
          description: Bug detection completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugDetectionResponse'

  /tests:
    post:
      summary: Generate tests
      description: Generate unit tests for provided code
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestGenerationRequest'
      responses:
        '200':
          description: Tests generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestGenerationResponse'

  /documentation:
    post:
      summary: Generate documentation
      description: Generate documentation for provided code
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentationRequest'
      responses:
        '200':
          description: Documentation generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationResponse'

  /chat:
    post:
      summary: AI chat
      description: Chat with AI assistant
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Chat response received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'

  /chat/stream:
    post:
      summary: Streaming AI chat
      description: Chat with AI assistant using streaming response
      tags:
        - AI Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Streaming chat response
          content:
            text/plain:
              schema:
                type: string

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            status:
              type: string
              example: "healthy"
            uptime:
              type: number
              example: 12345.67
            memory:
              type: object
              properties:
                rss:
                  type: number
                heapTotal:
                  type: number
                heapUsed:
                  type: number
                external:
                  type: number
        timestamp:
          type: string
          format: date-time

    ConfigResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            name:
              type: string
            version:
              type: string
            ai:
              type: object
              properties:
                providers:
                  type: array
                  items:
                    type: string
                features:
                  type: array
                  items:
                    type: string
            api:
              type: object
              properties:
                port:
                  type: number
                host:
                  type: string
                endpoints:
                  type: array
                  items:
                    type: string
        timestamp:
          type: string
          format: date-time

    CompletionRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          type: string
          description: The code prompt to complete
          minLength: 1
          maxLength: 10000
        provider:
          type: string
          enum: [openai, anthropic, google, custom]
          description: AI provider to use
        model:
          type: string
          description: Specific model to use
        temperature:
          type: number
          minimum: 0
          maximum: 2
          default: 0.7
          description: Sampling temperature
        maxTokens:
          type: integer
          minimum: 1
          maximum: 4000
          default: 100
          description: Maximum tokens to generate

    CompletionResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            completion:
              type: string
            provider:
              type: string
            tokens:
              type: integer
            model:
              type: string
        timestamp:
          type: string
          format: date-time

    ReviewRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Code to review
          minLength: 1
          maxLength: 50000
        language:
          type: string
          description: Programming language
        rules:
          type: array
          items:
            type: string
          description: Custom review rules

    ReviewResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            review:
              type: array
              items:
                type: object
                properties:
                  line:
                    type: integer
                  message:
                    type: string
                  severity:
                    type: string
                    enum: [info, warning, error]
            score:
              type: integer
              minimum: 0
              maximum: 100
        timestamp:
          type: string
          format: date-time

    AnalysisRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Code to analyze
          minLength: 1
          maxLength: 50000
        type:
          type: string
          enum: [performance, security, complexity]
          description: Type of analysis
        language:
          type: string
          description: Programming language

    AnalysisResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            complexity:
              type: string
            suggestions:
              type: array
              items:
                type: string
            metrics:
              type: object
        timestamp:
          type: string
          format: date-time

    BugDetectionRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Code to analyze for bugs
          minLength: 1

    BugDetectionResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            bugs:
              type: array
              items:
                type: object
                properties:
                  line:
                    type: integer
                  description:
                    type: string
                  severity:
                    type: string
            confidence:
              type: number
              minimum: 0
              maximum: 1
        timestamp:
          type: string
          format: date-time

    TestGenerationRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Code to generate tests for
          minLength: 1
        framework:
          type: string
          description: Testing framework to use
          default: jest

    TestGenerationResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            tests:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  code:
                    type: string
        timestamp:
          type: string
          format: date-time

    DocumentationRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Code to document
          minLength: 1
        format:
          type: string
          enum: [jsdoc, markdown, docstring]
          description: Documentation format

    DocumentationResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            documentation:
              type: string
            format:
              type: string
        timestamp:
          type: string
          format: date-time

    ChatRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Chat message
          minLength: 1
          maxLength: 1000
        context:
          type: object
          description: Additional context
        sessionId:
          type: string
          format: uuid
          description: Session identifier

    ChatResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            response:
              type: string
            tokens:
              type: integer
        timestamp:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time